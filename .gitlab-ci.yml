stages:
  - build
  - deploy-sit

build-sit:
  stage: build
  only:
    - sit
  image:
    name: docker:18-git
  services:
    - docker:dind
  before_script:
    - echo "BASE_API=$BASE_API" > .env
    - docker info
    - apk add --no-cache curl jq python3 py3-pip
    - pip3 install awscli
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY_URL

  script:
    - docker build --tag $DOCKER_REGISTRY_URL/$STAGING_REGISTRY_NAME:$CI_COMMIT_SHA --tag $DOCKER_REGISTRY_URL/$STAGING_REGISTRY_NAME:latest --build-arg APP_ENVIRONMENT=sit .
    - docker push $DOCKER_REGISTRY_URL/$STAGING_REGISTRY_NAME:$CI_COMMIT_SHA
    - docker push $DOCKER_REGISTRY_URL/$STAGING_REGISTRY_NAME:latest

deploy-sit:
  stage: deploy-sit
  variables:
    GIT_STRATEGY: none
  only:
    - sit
  image:
    name: alpine
  before_script:
    - apk update && apk add openssh-client bash
  script:
    # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
    - eval $(ssh-agent -s)

    # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'

    # tạo folder ~/.ssh
    - mkdir -p ~/.ssh

    # Scan lấy SSH Host key cho địa chỉ IP server
    # Được kết quả bao nhiêu thì thêm vào file known_hosts
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts

    # Sửa lại quyền của file known_hosts
    - chmod 644 ~/.ssh/known_hosts

    # Thực hiện SSH vào server, login vào Registry, chuyển tới folder project
    # Down project, pull image về, up project và xoá đi image cũ
    - >
      ssh $SSH_USER@$SSH_SERVER_IP
      "cd ${PATH_TO_PROJECT};
      sudo aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID;
      sudo aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY;
      sudo aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY_URL;
      docker-compose down istick-landing-app;
      docker pull $DOCKER_REGISTRY_URL/$STAGING_REGISTRY_NAME:latest;
      docker-compose up -d;
      docker image prune -f;"
